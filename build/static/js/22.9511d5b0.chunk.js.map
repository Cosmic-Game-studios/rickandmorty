{"version":3,"file":"static/js/22.9511d5b0.chunk.js","mappings":"2MAgDA,QA7CA,WACE,MAAM,GAAEA,IAAOC,EAAAA,EAAAA,MACRC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAgBnC,OAdAK,EAAAA,EAAAA,YAAU,KACRH,GAAW,GACXI,MAAM,2CAADC,OAA4CX,IAC9CY,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJZ,EAAWY,GACXT,GAAW,EAAM,IAElBU,OAAMC,IACLT,EAAS,kCACTF,GAAW,EAAM,GACjB,GACH,CAACN,IAEAK,GAAgBa,EAAAA,EAAAA,KAAA,KAAAC,SAAG,+BACnBZ,GAAcW,EAAAA,EAAAA,KAAA,KAAAC,SAAIZ,KAGpBa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BD,EAAAA,EAAAA,KAAA,MAAAC,SAAKjB,EAAQoB,QACbF,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,kBAAsB,IAAEjB,EAAQA,YAC3CkB,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EAAGD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,cAAkB,IAAEjB,EAAQqB,aACvCL,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iCACJD,EAAAA,EAAAA,KAAA,MAAAC,SACGjB,EAAQsB,WAAWC,KAAIC,IACtB,MAAMC,EAAQD,EAAIE,MAAM,KAClBC,EAASF,EAAMA,EAAMG,OAAS,GACpC,OACEZ,EAAAA,EAAAA,KAAA,MAAAC,UACEC,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,GAAE,cAAArB,OAAgBkB,GAASV,SAAA,CAAC,aAAWU,MADtCA,EAEJ,OAIXX,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,GAAG,YAAYX,UAAU,YAAWF,SAAC,uBAGjD,C","sources":["pages/EpisodeDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nfunction EpisodeDetails() {\n  const { id } = useParams();\n  const [episode, setEpisode] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://rickandmortyapi.com/api/episode/${id}`)\n      .then(response => response.json())\n      .then(data => {\n        setEpisode(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Error loading episode details.');\n        setLoading(false);\n      });\n  }, [id]);\n\n  if (loading) return <p>Loading episode details...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div className=\"episode-details\">\n      <h2>{episode.name}</h2>\n      <p><strong>Episode Code:</strong> {episode.episode}</p>\n      <p><strong>Air Date:</strong> {episode.air_date}</p>\n      <h3>Characters in this episode:</h3>\n      <ul>\n        {episode.characters.map(url => {\n          const parts = url.split('/');\n          const charId = parts[parts.length - 1];\n          return (\n            <li key={charId}>\n              <Link to={`/character/${charId}`}>Character {charId}</Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Link to=\"/episodes\" className=\"back-link\">Back to Episodes</Link>\n    </div>\n  );\n}\n\nexport default EpisodeDetails;\n"],"names":["id","useParams","episode","setEpisode","useState","loading","setLoading","error","setError","useEffect","fetch","concat","then","response","json","data","catch","err","_jsx","children","_jsxs","className","name","air_date","characters","map","url","parts","split","charId","length","Link","to"],"sourceRoot":""}