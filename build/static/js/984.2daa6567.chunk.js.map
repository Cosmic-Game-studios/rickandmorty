{"version":3,"file":"static/js/984.2daa6567.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/PlayArrow.js","pages/Episodes.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  Button,\n  CircularProgress,\n  Alert,\n  Box,\n  Pagination,\n  Chip\n} from '@mui/material';\nimport { PlayArrow } from '@mui/icons-material';\n\nfunction Episodes() {\n  const [episodes, setEpisodes] = useState([]);\n  const [page, setPage] = useState(1);\n  const [info, setInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://rickandmortyapi.com/api/episode?page=${page}`)\n      .then(response => response.json())\n      .then(data => {\n        setEpisodes(data.results);\n        setInfo(data.info);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError('Error loading episodes.');\n        setLoading(false);\n      });\n  }, [page]);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Typography variant=\"h3\" component=\"h2\" gutterBottom align=\"center\" sx={{ mb: 4 }}>\n        Episodes\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {loading ? (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n          <CircularProgress size={60} />\n        </Box>\n      ) : (\n        <>\n          <Grid container spacing={3}>\n            {episodes.map(episode => (\n              <Grid item xs={12} sm={6} md={4} key={episode.id}>\n                <Card\n                  sx={{\n                    height: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    transition: 'transform 0.2s, box-shadow 0.2s',\n                    '&:hover': {\n                      transform: 'translateY(-4px)',\n                      boxShadow: 6\n                    }\n                  }}\n                >\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                      {episode.name}\n                    </Typography>\n                    <Chip\n                      label={episode.episode}\n                      color=\"primary\"\n                      size=\"small\"\n                      sx={{ mb: 2 }}\n                    />\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                      Air Date: {episode.air_date}\n                    </Typography>\n                    <Button\n                      component={Link}\n                      to={`/episode/${episode.id}`}\n                      variant=\"contained\"\n                      startIcon={<PlayArrow />}\n                      fullWidth\n                      sx={{ mt: 2 }}\n                    >\n                      View Details\n                    </Button>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n\n          {info && info.pages > 1 && (\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ mt: 4 }}>\n              <Pagination\n                count={info.pages}\n                page={page}\n                onChange={handlePageChange}\n                color=\"primary\"\n                size=\"large\"\n                showFirstButton\n                showLastButton\n              />\n            </Box>\n          )}\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Episodes;\n"],"names":["createSvgIcon","_jsx","d","episodes","setEpisodes","useState","page","setPage","info","setInfo","loading","setLoading","error","setError","useEffect","fetch","concat","then","response","json","data","results","catch","err","_jsxs","Container","maxWidth","sx","py","children","Typography","variant","component","gutterBottom","align","mb","Alert","severity","Box","display","justifyContent","alignItems","minHeight","CircularProgress","size","_Fragment","Grid","container","spacing","map","episode","item","xs","sm","md","Card","height","flexDirection","transition","transform","boxShadow","CardContent","flexGrow","name","Chip","label","color","air_date","Button","Link","to","id","startIcon","PlayArrow","fullWidth","mt","pages","Pagination","count","onChange","handlePageChange","event","value","window","scrollTo","top","behavior","showFirstButton","showLastButton"],"sourceRoot":""}