{"version":3,"file":"static/js/713.05caa8f0.chunk.js","mappings":"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","sources":["components/FusionPanel.js","pages/Profile.js"],"sourcesContent":["import React from 'react';\nimport './FusionPanel.css';\n\nfunction FusionPanel() {\n  return (\n    <div className=\"fusion-panel\">\n      <h2>Charaktere fusionieren</h2>\n      <p className=\"coming-soon\">Coming Soon</p>\n    </div>\n  );\n}\n\nexport default FusionPanel;","import React, { useContext, useState, useEffect, useCallback, useMemo } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport FusionPanel from '../components/FusionPanel';\nimport { Link } from 'react-router-dom';\nimport './Profile.css';\n\n// Extracted components for better code organization\nconst StatCard = ({ title, value, subtitle, icon }) => (\n  <div className=\"profile-card\">\n    {icon && <div className=\"card-icon\">{icon}</div>}\n    <h3>{title}</h3>\n    <p className=\"card-value\">{value}</p>\n    {subtitle && <p className=\"card-subtitle\">{subtitle}</p>}\n  </div>\n);\n\nconst LevelProgressBar = ({ percentage }) => (\n  <div className=\"level-progress-container\">\n    <div \n      className=\"level-progress-bar\" \n      style={{ width: `${percentage}%` }}\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      aria-valuenow={percentage}\n      role=\"progressbar\"\n    />\n  </div>\n);\n\nconst CoinFarmCharacterCard = ({ character, isSelected, onSelect }) => (\n  <div\n    className={`coin-farm-card ${isSelected ? 'selected' : ''}`}\n    onClick={onSelect}\n    role=\"button\"\n    aria-pressed={isSelected}\n    tabIndex={0}\n  >\n    <div className=\"character-image-container\">\n      <img \n        src={character.image} \n        alt={character.name} \n        loading=\"lazy\"\n      />\n      {isSelected && <div className=\"selected-indicator\" aria-hidden=\"true\">✓</div>}\n    </div>\n    <p>{character.name}</p>\n    <div className=\"character-speed\">\n      <span className=\"speed-icon\">⚡</span>\n      <span>{(character.baseSpeed || 1) + ((character.characterLevel || 1) - 1) * 0.5}</span>\n    </div>\n  </div>\n);\n\nconst UnlockedCharacterCard = ({ character, onUpgrade, calculateSpeed, coins }) => {\n  const upgradePrice = 100 * (character.characterLevel || 1);\n  const canAfford = coins >= upgradePrice;\n  \n  const rarityColors = {\n    'Common': '#A0A0A0',\n    'Uncommon': '#4CAF50',\n    'Rare': '#2196F3',\n    'Epic': '#9C27B0',\n    'Legendary': '#FFC107'\n  };\n  \n  return (\n    <div className=\"unlocked-card\">\n      <div className=\"character-image-container\" style={{ borderColor: rarityColors[character.rarity || 'Common'] }}>\n        <img \n          src={character.image} \n          alt={character.name} \n          loading=\"lazy\"\n        />\n        <span className=\"character-level\">Lv.{character.characterLevel || 1}</span>\n      </div>\n      <div className=\"card-details\">\n        <h4>{character.name}</h4>\n        <div className=\"character-stats\">\n          <p>\n            <span className=\"stat-label\">Speed:</span> \n            <span className=\"stat-value\">{calculateSpeed(character)}</span>\n          </p>\n          <p>\n            <span className=\"stat-label\">Rarity:</span> \n            <span className=\"stat-value\" style={{ color: rarityColors[character.rarity || 'Common'] }}>\n              {character.rarity || 'Common'}\n            </span>\n          </p>\n        </div>\n      </div>\n      <button\n        onClick={() => onUpgrade(character.id)}\n        className={`upgrade-button ${!canAfford ? 'disabled' : ''}`}\n        disabled={!canAfford}\n        title={!canAfford ? 'Not enough coins' : `Upgrade ${character.name}`}\n      >\n        {canAfford ? (\n          <>Upgrade <span className=\"coin-cost\">{upgradePrice} 🪙</span></>\n        ) : (\n          <>Need <span className=\"coin-cost\">{upgradePrice} 🪙</span></>\n        )}\n      </button>\n    </div>\n  );\n};\n\nconst Pagination = ({ currentPage, totalPages, onPrevious, onNext }) => (\n  <div className=\"pagination-controls\">\n    <button\n      onClick={onPrevious}\n      disabled={currentPage === 0}\n      className=\"pagination-button\"\n      aria-label=\"Go to previous page\"\n    >\n      ← Previous\n    </button>\n    <span className=\"page-indicator\">\n      Page {currentPage + 1} of {totalPages}\n    </span>\n    <button\n      onClick={onNext}\n      disabled={currentPage === totalPages - 1}\n      className=\"pagination-button\"\n      aria-label=\"Go to next page\"\n    >\n      Next →\n    </button>\n  </div>\n);\n\nconst LoadingIndicator = () => (\n  <div className=\"loading-indicator\">\n    <div className=\"loading-spinner\"></div>\n    <p>Loading your profile data...</p>\n  </div>\n);\n\n// Main Profile component\nfunction Profile() {\n  const {\n    unlockedCharacters = [],\n    level = 1,\n    rewardPoints = 0,\n    coins = 0,\n    upgradeCharacter,\n    selectedCoinFarm,\n    selectCoinFarm,\n    error\n  } = useContext(UserContext) || {};\n  \n  const [isLoading, setIsLoading] = useState(true);\n\n  // Calculate level stats\n  const nextLevelThreshold = useMemo(() => level * 500, [level]);\n  const pointsToNextLevel = useMemo(() => \n    Math.max(0, nextLevelThreshold - rewardPoints), \n    [nextLevelThreshold, rewardPoints]\n  );\n  \n  const levelProgress = useMemo(() => \n    Math.min(100, ((rewardPoints % 500) / 500) * 100).toFixed(0),\n    [rewardPoints]\n  );\n\n  // Character speed calculation\n  const calculateEffectiveSpeed = useCallback((character) => {\n    const base = character.baseSpeed || 1;\n    const upgradeBonus = ((character.characterLevel || 1) - 1) * 0.5;\n    const rarityMultipliers = {\n      'Common': 0,\n      'Uncommon': 0.5,\n      'Rare': 1,\n      'Epic': 1.5,\n      'Legendary': 2\n    };\n    const rarityBonus = rarityMultipliers[character.rarity || 'Common'];\n    return (base + upgradeBonus + rarityBonus).toFixed(2);\n  }, []);\n\n  // Coin Farm pagination\n  const coinFarmItemsPerPage = 8;\n  const [coinFarmPage, setCoinFarmPage] = useState(0);\n  \n  const coinFarmTotalPages = useMemo(() => \n    Math.ceil(unlockedCharacters.length / coinFarmItemsPerPage),\n    [unlockedCharacters.length, coinFarmItemsPerPage]\n  );\n  \n  const paginatedCoinFarmCharacters = useMemo(() => \n    unlockedCharacters.slice(\n      coinFarmPage * coinFarmItemsPerPage,\n      (coinFarmPage + 1) * coinFarmItemsPerPage\n    ),\n    [unlockedCharacters, coinFarmPage, coinFarmItemsPerPage]\n  );\n\n  const goToPreviousCoinFarmPage = useCallback(() => {\n    setCoinFarmPage(prev => Math.max(0, prev - 1));\n  }, []);\n\n  const goToNextCoinFarmPage = useCallback(() => {\n    setCoinFarmPage(prev => Math.min(coinFarmTotalPages - 1, prev + 1));\n  }, [coinFarmTotalPages]);\n\n  // Character collection pagination\n  const itemsPerPage = 6;\n  const [currentPage, setCurrentPage] = useState(0);\n  \n  const totalPages = useMemo(() => \n    Math.ceil(unlockedCharacters.length / itemsPerPage),\n    [unlockedCharacters.length, itemsPerPage]\n  );\n  \n  const paginatedCharacters = useMemo(() => \n    unlockedCharacters.slice(\n      currentPage * itemsPerPage,\n      (currentPage + 1) * itemsPerPage\n    ),\n    [unlockedCharacters, currentPage, itemsPerPage]\n  );\n\n  const goToPreviousPage = useCallback(() => {\n    setCurrentPage(prev => Math.max(0, prev - 1));\n  }, []);\n\n  const goToNextPage = useCallback(() => {\n    setCurrentPage(prev => Math.min(totalPages - 1, prev + 1));\n  }, [totalPages]);\n  \n  // Auto-select first character for coin farm if none selected\n  useEffect(() => {\n    if (!selectedCoinFarm && unlockedCharacters.length > 0 && selectCoinFarm) {\n      selectCoinFarm(unlockedCharacters[0].id);\n    }\n  }, [unlockedCharacters, selectedCoinFarm, selectCoinFarm]);\n  \n  // Simulating loading time\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Error handling\n  if (error) {\n    return (\n      <div className=\"profile-page error-state\">\n        <h2>Oops! Something went wrong</h2>\n        <p>{error.message || 'Failed to load profile data'}</p>\n        <button className=\"retry-button\" onClick={() => window.location.reload()}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"profile-page\">\n        <h2>Your Profile</h2>\n        <LoadingIndicator />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"profile-page\">\n      <div className=\"profile-header\">\n        <h2>Your Profile</h2>\n        <Link to=\"/settings\" className=\"settings-link\" aria-label=\"Settings\">\n          ⚙️\n        </Link>\n      </div>\n      \n      {/* Status cards */}\n      <div className=\"profile-info\">\n        <StatCard \n          title=\"Level\" \n          value={level} \n          subtitle={`${pointsToNextLevel} points to level ${level + 1}`}\n          icon=\"🏆\"\n        />\n        <div className=\"level-progress-wrapper\">\n          <LevelProgressBar percentage={levelProgress} />\n          <span className=\"progress-text\">{levelProgress}%</span>\n        </div>\n        \n        <div className=\"stats-row\">\n          <StatCard \n            title=\"Reward Points\" \n            value={rewardPoints} \n            icon=\"⭐\"\n          />\n          <StatCard \n            title=\"Coins\" \n            value={coins} \n            icon=\"🪙\"\n          />\n        </div>\n      </div>\n\n      {/* Coin Farm Selection */}\n      <section className=\"section coin-farm-section\">\n        <div className=\"section-header\">\n          <h3>Coin Farm</h3>\n          <button className=\"help-button\" title=\"How Coin Farms work\">?</button>\n        </div>\n\n        {unlockedCharacters.length > 0 ? (\n          <>\n            <p className=\"section-description\">\n              Select a character to collect coins automatically. Higher level characters earn more!\n            </p>\n            <div className=\"coin-farm-scroll\" role=\"listbox\" aria-label=\"Selectable characters for coin farming\">\n              {paginatedCoinFarmCharacters.map((character) => (\n                <CoinFarmCharacterCard \n                  key={character.id}\n                  character={character}\n                  isSelected={selectedCoinFarm === character.id}\n                  onSelect={() => selectCoinFarm(character.id)}\n                />\n              ))}\n            </div>\n            {coinFarmTotalPages > 1 && (\n              <Pagination \n                currentPage={coinFarmPage}\n                totalPages={coinFarmTotalPages}\n                onPrevious={goToPreviousCoinFarmPage}\n                onNext={goToNextCoinFarmPage}\n              />\n            )}\n          </>\n        ) : (\n          <div className=\"empty-state\">\n            <p>No characters unlocked yet.</p>\n            <Link to=\"/missions\" className=\"cta-button\">Complete Missions</Link>\n          </div>\n        )}\n      </section>\n\n      {/* Character Collection */}\n      <section className=\"section character-collection-section\">\n        <div className=\"section-header\">\n          <h3>Character Collection</h3>\n          <span className=\"collection-count\">{unlockedCharacters.length} / 30</span>\n        </div>\n\n        {unlockedCharacters.length > 0 ? (\n          <>\n            <p className=\"section-description\">\n              Upgrade your characters to increase their coin collection speed.\n            </p>\n            <div className=\"unlocked-list\" role=\"list\" aria-label=\"Your character collection\">\n              {paginatedCharacters.map((character) => (\n                <UnlockedCharacterCard \n                  key={character.id}\n                  character={character}\n                  onUpgrade={upgradeCharacter}\n                  calculateSpeed={calculateEffectiveSpeed}\n                  coins={coins}\n                />\n              ))}\n            </div>\n            {totalPages > 1 && (\n              <Pagination \n                currentPage={currentPage}\n                totalPages={totalPages}\n                onPrevious={goToPreviousPage}\n                onNext={goToNextPage}\n              />\n            )}\n          </>\n        ) : (\n          <div className=\"empty-collection\">\n            <p>You haven't unlocked any characters yet.</p>\n            <Link to=\"/missions\" className=\"cta-button\">Go to Missions</Link>\n          </div>\n        )}\n      </section>\n\n      {/* Fusion Panel */}\n      <section className=\"section fusion-section\">\n        <div className=\"section-header\">\n          <h3>Character Fusion</h3>\n          <button className=\"help-button\" title=\"How Fusion works\">?</button>\n        </div>\n        <FusionPanel />\n      </section>\n    </div>\n  );\n}\n\nexport default Profile;"],"names":["_jsxs","className","children","_jsx","StatCard","_ref","title","value","subtitle","icon","LevelProgressBar","_ref2","percentage","style","width","concat","role","CoinFarmCharacterCard","_ref3","character","isSelected","onSelect","onClick","tabIndex","src","image","alt","name","loading","baseSpeed","characterLevel","UnlockedCharacterCard","_ref4","onUpgrade","calculateSpeed","coins","upgradePrice","canAfford","rarityColors","borderColor","rarity","color","id","disabled","_Fragment","Pagination","_ref5","currentPage","totalPages","onPrevious","onNext","LoadingIndicator","unlockedCharacters","level","rewardPoints","upgradeCharacter","selectedCoinFarm","selectCoinFarm","error","useContext","UserContext","isLoading","setIsLoading","useState","nextLevelThreshold","useMemo","pointsToNextLevel","Math","max","levelProgress","min","toFixed","calculateEffectiveSpeed","useCallback","coinFarmPage","setCoinFarmPage","coinFarmTotalPages","ceil","length","paginatedCoinFarmCharacters","slice","goToPreviousCoinFarmPage","prev","goToNextCoinFarmPage","setCurrentPage","paginatedCharacters","goToPreviousPage","goToNextPage","useEffect","timer","setTimeout","clearTimeout","message","window","location","reload","Link","to","map","FusionPanel"],"sourceRoot":""}